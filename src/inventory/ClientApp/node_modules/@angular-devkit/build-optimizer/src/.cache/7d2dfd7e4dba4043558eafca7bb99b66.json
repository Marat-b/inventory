{"remainingRequest":"C:\\Softz\\inventory\\src\\inventory\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Softz\\inventory\\src\\inventory\\node_modules\\@ng-bootstrap\\ng-bootstrap\\timepicker\\ngb-time.js","dependencies":[{"path":"C:\\Softz\\inventory\\src\\inventory\\node_modules\\@ng-bootstrap\\ng-bootstrap\\timepicker\\ngb-time.js","mtime":499162500000},{"path":"C:\\Softz\\inventory\\src\\inventory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1522936630164},{"path":"C:\\Softz\\inventory\\src\\inventory\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":499162500000}],"contextDependencies":[],"result":["import { isNumber, toInteger } from '../util/util';\r\nvar NgbTime = /*@__PURE__*/ (function () {\r\n    function NgbTime(hour, minute, second) {\r\n        this.hour = toInteger(hour);\r\n        this.minute = toInteger(minute);\r\n        this.second = toInteger(second);\r\n    }\r\n    NgbTime.prototype.changeHour = function (step) {\r\n        if (step === void 0) {\r\n            step = 1;\r\n        }\r\n        this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step);\r\n    };\r\n    NgbTime.prototype.updateHour = function (hour) {\r\n        if (isNumber(hour)) {\r\n            this.hour = (hour < 0 ? 24 + hour : hour) % 24;\r\n        }\r\n        else {\r\n            this.hour = NaN;\r\n        }\r\n    };\r\n    NgbTime.prototype.changeMinute = function (step) {\r\n        if (step === void 0) {\r\n            step = 1;\r\n        }\r\n        this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step);\r\n    };\r\n    NgbTime.prototype.updateMinute = function (minute) {\r\n        if (isNumber(minute)) {\r\n            this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\r\n            this.changeHour(Math.floor(minute / 60));\r\n        }\r\n        else {\r\n            this.minute = NaN;\r\n        }\r\n    };\r\n    NgbTime.prototype.changeSecond = function (step) {\r\n        if (step === void 0) {\r\n            step = 1;\r\n        }\r\n        this.updateSecond((isNaN(this.second) ? 0 : this.second) + step);\r\n    };\r\n    NgbTime.prototype.updateSecond = function (second) {\r\n        if (isNumber(second)) {\r\n            this.second = second < 0 ? 60 + second % 60 : second % 60;\r\n            this.changeMinute(Math.floor(second / 60));\r\n        }\r\n        else {\r\n            this.second = NaN;\r\n        }\r\n    };\r\n    NgbTime.prototype.isValid = function (checkSecs) {\r\n        if (checkSecs === void 0) {\r\n            checkSecs = true;\r\n        }\r\n        return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\r\n    };\r\n    NgbTime.prototype.toString = function () { return (this.hour || 0) + \":\" + (this.minute || 0) + \":\" + (this.second || 0); };\r\n    return NgbTime;\r\n}());\r\nexport { NgbTime };\r\n//# sourceMappingURL=ngb-time.js.map\r\n",null]}