{"remainingRequest":"C:\\Softz\\inventory\\src\\inventory\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!C:\\Softz\\inventory\\src\\inventory\\node_modules\\@ng-bootstrap\\ng-bootstrap\\util\\popup.js","dependencies":[{"path":"C:\\Softz\\inventory\\src\\inventory\\node_modules\\@ng-bootstrap\\ng-bootstrap\\util\\popup.js","mtime":499162500000},{"path":"C:\\Softz\\inventory\\src\\inventory\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1522936630164},{"path":"C:\\Softz\\inventory\\src\\inventory\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":499162500000}],"contextDependencies":[],"result":["import { TemplateRef } from '@angular/core';\r\nvar ContentRef = /*@__PURE__*/ (function () {\r\n    function ContentRef(nodes, viewRef, componentRef) {\r\n        this.nodes = nodes;\r\n        this.viewRef = viewRef;\r\n        this.componentRef = componentRef;\r\n    }\r\n    return ContentRef;\r\n}());\r\nexport { ContentRef };\r\nvar PopupService = /*@__PURE__*/ (function () {\r\n    function PopupService(_type, _injector, _viewContainerRef, _renderer, _componentFactoryResolver) {\r\n        this._type = _type;\r\n        this._injector = _injector;\r\n        this._viewContainerRef = _viewContainerRef;\r\n        this._renderer = _renderer;\r\n        this._componentFactoryResolver = _componentFactoryResolver;\r\n    }\r\n    PopupService.prototype.open = function (content, context) {\r\n        if (!this._windowRef) {\r\n            this._contentRef = this._getContentRef(content, context);\r\n            this._windowRef = this._viewContainerRef.createComponent(this._componentFactoryResolver.resolveComponentFactory(this._type), 0, this._injector, this._contentRef.nodes);\r\n        }\r\n        return this._windowRef;\r\n    };\r\n    PopupService.prototype.close = function () {\r\n        if (this._windowRef) {\r\n            this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\r\n            this._windowRef = null;\r\n            if (this._contentRef.viewRef) {\r\n                this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\r\n                this._contentRef = null;\r\n            }\r\n        }\r\n    };\r\n    PopupService.prototype._getContentRef = function (content, context) {\r\n        if (!content) {\r\n            return new ContentRef([]);\r\n        }\r\n        else if (content instanceof TemplateRef) {\r\n            var viewRef = this._viewContainerRef.createEmbeddedView(content, context);\r\n            return new ContentRef([viewRef.rootNodes], viewRef);\r\n        }\r\n        else {\r\n            return new ContentRef([[this._renderer.createText(\"\" + content)]]);\r\n        }\r\n    };\r\n    return PopupService;\r\n}());\r\nexport { PopupService };\r\n//# sourceMappingURL=popup.js.map\r\n",null]}